// <auto-generated />
using EFGameAPI.DB.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFGameAPI.DB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231012110443_dataBaseSeeding")]
    partial class dataBaseSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFGameAPI.DB.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Game", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Resume = "The largest technical leap forward in Counter-Strike''s history, ensuring new features and updates for years to come.",
                            Title = "Counter-Strike 2"
                        },
                        new
                        {
                            Id = 2,
                            Resume = "In-development multiplayer, space trading and combat simulation game. The game is being developed and published by Cloud Imperium Games",
                            Title = "Star Citizen"
                        },
                        new
                        {
                            Id = 3,
                            Resume = "Role-playing video game developed and published by Larian Studios. It is the third main installment in the Baldur''s Gate series, based on the tabletop role-playing system of Dungeons & Dragons.",
                            Title = "Baldur's Gate 3"
                        });
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.GameGenre", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 1,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 1,
                            GenreId = 5
                        },
                        new
                        {
                            GameId = 1,
                            GenreId = 6
                        },
                        new
                        {
                            GameId = 1,
                            GenreId = 9
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = 10
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = 13
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 4
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 5
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 7
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 9
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 12
                        });
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Coop"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Early Access"
                        },
                        new
                        {
                            Id = 5,
                            Label = "FPS"
                        },
                        new
                        {
                            Id = 6,
                            Label = "Free to Play"
                        },
                        new
                        {
                            Id = 7,
                            Label = "MMO"
                        },
                        new
                        {
                            Id = 8,
                            Label = "Management"
                        },
                        new
                        {
                            Id = 9,
                            Label = "Multi"
                        },
                        new
                        {
                            Id = 10,
                            Label = "RPG"
                        },
                        new
                        {
                            Id = 11,
                            Label = "Racing"
                        },
                        new
                        {
                            Id = 12,
                            Label = "Simulation"
                        },
                        new
                        {
                            Id = 13,
                            Label = "Solo"
                        });
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("VARBINARY(64)");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.UserGame", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("UsersGame");
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.GameGenre", b =>
                {
                    b.HasOne("EFGameAPI.DB.Entities.Game", "Game")
                        .WithMany("Genres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFGameAPI.DB.Entities.Genre", "Genre")
                        .WithMany("Games")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.UserGame", b =>
                {
                    b.HasOne("EFGameAPI.DB.Entities.Game", "Game")
                        .WithMany("Users")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EFGameAPI.DB.Entities.User", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.Game", b =>
                {
                    b.Navigation("Genres");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.Genre", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("EFGameAPI.DB.Entities.User", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
